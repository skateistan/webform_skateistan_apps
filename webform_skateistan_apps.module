<?php
/**
 * @file
 * Implements modifications to the webform submission process for Skateistan
 * intern/volunteer applications (two different webforms).
 */

function webform_skateistan_apps_webform_submission_insert($node, $submission) {
  if ($node->nid == 20) { // Intern application form
    _webform_skateistan_apps_submit_ia($node, $submission);
  }
  if ($node->nid == 33) { // Remote volunteer application form
    _webform_skateistan_apps_submit_rva($node, $submission);
  }
}

function _webform_skateistan_apps_hr_address() {
  return "hr@skateistan.org";
}

function multipart_enc_text($name, $value){
  return "Content-Disposition: form-data; name=\"$name\"\r\n\r\n$value\r\n";
}

function multipart_enc_file($name, $path){
  if (substr($path, 0, 1) == "@") $path = substr($path, 1);
  $filename = basename($path);
  $mimetype = "application/octet-stream";
  $data = "Content-Disposition: form-data; name=\"$name\"; filename=\"$filename\"\r\n";
  $data .= "Content-Transfer-Encoding: binary\r\n";
  $data .= "Content-Type: $mimetype\r\n\r\n";
  $data .= file_get_contents($path) . "\r\n";
  return $data;
}

function http_build_multipart($boundary, $params) {
  $output = "";
  foreach ($params as $key => $value) {
    $output .= "--$boundary\r\n";
    if ($key == 'cv') {
      $output .= multipart_enc_file($key, $value);
    } else {
      $output .= multipart_enc_text ($key, $value);
    }
  }
  $output .= "--$boundary--";
  return $output;
}

function _webform_skateistan_apps_submit_ia($node, $submission) {
  $hook_url = "http://skateistanappreceiver.heroku.com/a/";
  $mapping = _webform_skateistan_apps_webform_component_mapping($node);

  $position = $submission->data[$mapping['position']]['value'][0];
  $name = $submission->data[$mapping['name']]['value'][0];
  $email = $submission->data[$mapping['email']]['value'][0];

  $note = "Intern Application: \n\n";
  $note .= "Position: " . $submission->data[$mapping['position']]['value'][0] . "\n\n";
  $note .= "Name: " . $name . "\n\n";
  $note .= "Email: " . $email . "\n\n";
  $note .= "Address:\n" . $submission->data[$mapping['address']]['value'][0] . "\n\n";
  $note .= "Age: " . $submission->data[$mapping['age']]['value'][0] . "\n\n";
  $note .= "Sex: " . $submission->data[$mapping['sex']]['value'][0] . "\n\n";
  $note .= "Nationality: " . $submission->data[$mapping['nationality_ies']]['value'][0] . "\n\n";
  $note .= "Languages: " . $submission->data[$mapping['languages']]['value'][0] . "\n\n";
  $note .= "What appeals to you about the Skateistan project?\n" . $submission->data[$mapping['appeals']]['value'][0] . "\n\n";
  $note .= "What skills do you have that will help us deliver our programs to Afghan youth?\n" . $submission->data[$mapping['skills']]['value'][0] . "\n\n";
  $note .= "Have you worked for a small organisation or NGO before?\n" . $submission->data[$mapping['ngo']]['value'][0] . "\n\n";
  $note .= "Have you worked with children before?\n" . $submission->data[$mapping['children']]['value'][0] . "\n\n";
  $note .= "Have you travelled to developing or Muslim countries before?\n" . $submission->data[$mapping['developing']]['value'][0] . "\n\n";
  $note .= "Do you have skateboarding experience? (if yes, how many years and what skill level)\n" . $submission->data[$mapping['skateboarding']]['value'][0] . "\n\n";
  $note .= "Do you have ramp building or trade skills?\n" . $submission->data[$mapping['ramp']]['value'][0] . "\n\n";
  $note .= "Do you have any medical condition that need to be considered before travelling to a developing country?\n" . $submission->data[$mapping['medical']]['value'][0] . "\n\n";
  $note .= "Timeline\n" . $submission->data[$mapping['timeline']]['value'][0] . "\n\n";

  $attachments = array();
  foreach ($node->webform['components'] as $component) {
    if ($component['type'] == 'file') { // cv file
      $cv = _webform_skateistan_apps_get_file($submission->data[$component['cid']]['value'][0]);
      if ($cv) $attachments[] = $cv;
    }
  }

  $data = array(
    "name" => $name,
    "email" => $email,
    "note" => $note,
    "cv" => $cv->filepath
  );

  // Send the application
  $boundary = "d3J4Uq";
  $headers = array("Content-Type" => "multipart/form-data; boundary=$boundary");
  $response = drupal_http_request($hook_url, $headers, "POST", http_build_multipart($boundary, $data));
  $url = $response->data; // Expected to be: https://skateistan.highrisehq.com/people/{id}
  _webform_skateistan_apps_send_ia_hr_email($url, $data, $attachments);
}

function _webform_skateistan_apps_send_ia_hr_email($url, $data, $attachments) {
  $from_address = _webform_skateistan_apps_hr_address();
  $to_address = _webform_skateistan_apps_hr_address();
  $subject = "Intern Application";
  $message = "Intern Application submitted by " . $data["name"] . ":\n\n";
  $message .= "Applicant has been saved in Highrise: " . $url . "\n\n";
  $message .= $data["note"] . "\n";
  $params["subject"] = $subject;
  $params["body"] = $message;
  $params['attachments'] = $attachments;
  $message = drupal_mail("webform_skateistan_apps", "ia_hr", $to_address, language_default(), $params, $from_address, FALSE);

  // Use mimemail to send this email, as it will contain an attachment
  $message = mimemail($message['from'], $message['to'], $message['subject'], $message['body'],
    TRUE, $message['headers'], $message['body'], $message['params']['attachments'], 'ia_hr');
}

function _webform_skateistan_apps_submit_rva($node, $submission) {
  $hook_url = 'http://skateistanappreceiver.heroku.com/rva/';
  $mapping = _webform_skateistan_apps_webform_component_mapping($node);
  $name = $submission->data[$mapping['name']]['value'][0];
  $email = $submission->data[$mapping['email']]['value'][0];
  $note = "Remote Volunteer Application: \n\n";
  $note .= "Name: " . $name . "\n\n";
  $note .= "Email: " . $email . "\n\n";
  $note .= "Address:\n" . $submission->data[$mapping['address_or_location']]['value'][0] . "\n\n";
  $note .= "Age: " . $submission->data[$mapping['age']]['value'][0] . "\n\n";
  $note .= "Are you a skateboarder? " . $submission->data[$mapping['are_you_a_skateboarder']]['value'][0] . "\n\n";
  $note .= "Why are you interested in the Skateistan project?\n" . $submission->data[$mapping['interest']]['value'][0] . "\n\n";
  $note .= "How could you help Skateistan from your current location?\n" . $submission->data[$mapping['help']]['value'][0] . "\n\n";
  $note .= "How many hours a week could you to dedicate to a remote volunteer position?\n" . $submission->data[$mapping['hours']]['value'][0] . "\n\n";
  $note .= "How many months could you potentially dedicate to a remote volunteer position?\n" . $submission->data[$mapping['months']]['value'][0] . "\n";

  $data = array(
    "name" => $name,
    "email" => $email,
    "note" => $note
  );
  // Send the application
  $headers = array('Content-Type' => 'application/x-www-form-urlencoded');
  $response = drupal_http_request($hook_url, $headers, 'POST', http_build_query($data, null, '&'));
  $url = $response->data; // Expected to be: https://skateistan.highrisehq.com/people/{id}
  _webform_skateistan_apps_send_rva_hr_email($url, $data);
}

function _webform_skateistan_apps_send_rva_hr_email($url, $data) {
  $from_address = _webform_skateistan_apps_hr_address();
  $to_address = _webform_skateistan_apps_hr_address();
  $subject = "Remote Volunteer Application";
  $message = "Remote Volunteer Application submitted by " . $data["name"] . ":\n\n";
  $message .= "Applicant has been saved in Highrise: " . $url . "\n\n";
  $message .= $data["note"] . "\n";
  $params["subject"] = $subject;
  $params["body"] = $message;
  drupal_mail("webform_skateistan_apps", "rva_hr", $to_address, language_default(), $params, $from_address);
}

function webform_skateistan_apps_mail($key, &$message, $params) {
  $message["subject"] = $params["subject"];
  $message["body"][] = $params["body"];
}

function _webform_skateistan_apps_webform_component_mapping($node) {
  $mapping = array();
  $components = $node->webform["components"];
  foreach ($components as $i => $component) {
    $key = $component["form_key"];
    $mapping[$key] = $i;
  }
  return $mapping;
}

function _webform_skateistan_apps_get_file($fid) {
  static $files;

  if (!isset($files[$fid])) {
    if (empty($fid)) {
      $files[$fid] = FALSE;
    } else {
      $files[$fid] = db_fetch_object(db_query("SELECT * FROM {files} WHERE fid = %d", $fid));
    }
  }
  return $files[$fid];
}